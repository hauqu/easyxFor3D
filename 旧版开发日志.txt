********************************************************
2020-01-09
完成开发环境的搭建
VS2019-easyx-C++
测试实例：
能够测试各种计算结果，检测其正确性如不同数据类型转换，点的投影等等等等等。。
网上的教程大部分都是大型项目的，测试环境的，我觉得还是自己写一个吧。就用最简单的函数
每个函数测试一个具体的小功能，保证以后的bug不要出在这些小功能的内部
test-1-2-3
完成
点的定义
向量的定义
向量的加减法，点乘，叉乘，求模，求夹角
***************************************************
2020-01-10
test-4-5-6
今天开始对平面的定义
符合右手定则
两个正交向量，加一个定点
三个点，
三向量，三点是平面的所有要素
解决n*n过大溢出问题
完成点的旋转，平面的旋转操作
定义了常用点和常用面
完成屏幕上投影点二维坐标计算。
*****************************************
2020-01-11
测试了面的旋转，严重失真导致点面目全非
下一个解决的问题：
斜45度视角
跟随视角
旋转视角
*********************************************
2020-01-12
今天几乎闲了一天，大概，没有碰电脑，日志也是补上的
屏幕问题始终没有解决，甚至连想要的一种效果也是勉强实现
在纸上稍微理了下结构，想了下屏幕到底该如何处理
点，向量的数据类型，用int 还是double 上还是有点迷，
最终，我想作为一个新手，还是少考虑些效率问题，努力先实现功能吧
********************************************************
2020-01-13
补上12号日志
test-7-8
重新定义屏幕，由一点，法向量，二维坐标方向来定义
看起来是和原来三点式或向量式相同，
但是不使用原来的所谓宽向量和长向量的模，而是只求出实际距离，
最后结合屏幕给出投影坐标，这样应该就能解决坐标系中心
和物理屏幕中心不重合的问题，关于旋转时精度损失问题，
double类型应该能很好的减少损失，如果还是比较严重就
采取分块旋转计算，在接近0 和90度这类角度单独处理
**********************************************************
2020-01-14
test-9-10
今天没啥打算，因为要选下学期的课程，满满当当的课程表弄得心累
贪吃蛇先前就写过两个，拓展到三维也不是什么难事，点继承式很好写，
但是可玩性就有待商榷了，因为我主要想实现的功能还没有实现，
而这些功能无一例外与屏幕的变换有关，而我恰恰卡在这里，
我觉得我需要抽个时间慢慢的理一下问题出在了哪里
还需要实现的功能包括：
1.能够将屏幕绕z轴旋转
2.能够在z轴旋转之后改变与xoy平面的夹角
3.能够定义屏幕的位置，将屏幕转换为视角
以便跟随贪吃蛇的头部从而实现第一人称视角
*****************************************************
2020-01-15
test-11-12-13-14-15
解决了点绕z轴旋转在某个象限缺失问题
定义了投影面的乘法加法，以达到缩放视角的效果
删除了部分冗余代码
******************************************************
2010-01-16
test-16
重写了部分代码，测试了点xoy旋转的范围问题
完成全视角转换，可360度观察
目前：
1.屏幕绕z旋转
2.绕xoy旋转
3.缩放视角
全部完成
优化了部分代码，全视角控制更流畅
准备进行3D引擎继续开发
定义3D物体，目前来讲只有点的定义，还不算3D物体
下面准备进行3D物体定义
首先整理代码。
*********************************************************
2020-01-17
今天在纸上稍微演算了下屏幕的移动，准备回家写代码的，中途出了点意外
被初恋前女友抱了一下，大脑cpu好像烧坏了，在纸上画了N个球坐标系，算了关机吧。
回家，一行代码也没写
打开项目，写点日志，平静下来吧
*********************************************
2020-01-18
test-18
开始编写屏幕移动方法
饶了一圈想了一圈。心情烦躁，直接从初始化的图形窗口写吧
改变图形窗口中心的坐标来实现视角平移，用缩放来实现前进后退
改动了dropshdow方法的部分代码，使之更符合预期
随便写了Moveplane方法，没啥意思，不想思考，不想测试，随缘吧
明天整理下几个文档，写好开发文档结束这个垃圾项目
女人啊，影响写代码。。。。。。。。。。。。。。。。。。。。
*********************************************************
2020-04-07
现在还不开学就离谱！！！！！
编写物体类
实现批量分组点，投影点
**************************************************************
2020-04-08
重写了物体类，并准备继续重写
删除了部分代码
****************************************************
2020-04-13
今天发生比较多事情，不过代码还是要写的
现在又到了一个十字路口，有些迷茫下一步要干什么，有些思路，但不想深究和实现
仿佛潜意识在告诉自己此路不通
从一个博客中获得了一些灵感，目前不应该执着于渲染的方式，消隐，物体和屏幕的关系。。。
首先应该实现一个强大 数据结构来管理众多的物体，相机，或者三角形，根据这个数据结构
再来定义其他的内部细节，避免大量结构代码暴露在主函数里，难以阅读和更改
数据结构这门课花了两天囫囵的学完了（大草），
目前觉得链表这种结构更改之后可以胜任很多功能，树，图这些我并不是很熟悉，
出了问题很可能照不出来，所以我决定在双向循环列表的基础上进行改动，
获得一个强大的数据结构，同时他也要很健壮，以能够适应多种数据的管理，
以及可能出现的莫名其妙的崩溃，越底层的东西越不能改动，越不能出错
边学边做，边学边做，边写边改，路漫漫其修远兮，吾将上下而求索，代码虽是一片苦海
但仍有其欢乐，仍有产出，养活自己，足矣。
***********************************************************
2020-04-14
利用图结构组织边
动态数组组织点
用点表示中心位置
以上组成物体类
还是感谢老师提点
重写了物体类
将测试用例备份后删除
还是尽量训练自己的心智吧，总是容易被外界的事情打扰，
遵循本心，没有本心就遵循
无妄，不痴，和气，自尊
*****************************************************************
2020-04-15
需要重写物体类，组织点边关系
**********************************
2020-04-18
感觉自己失了智
点单独存储?
边单独存储？
纹理单独存储？

重写了渲染器和物体类
进行测试发现，屏幕转换失真严重
***************************************
2020-05-13
重新整理了思路
准备重写项目


















